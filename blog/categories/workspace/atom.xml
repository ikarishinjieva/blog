<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: workspace | Tac say]]></title>
  <link href="http://ikarishinjieva.github.com/blog/blog/categories/workspace/atom.xml" rel="self"/>
  <link href="http://ikarishinjieva.github.com/blog/"/>
  <updated>2013-10-11T22:20:14+08:00</updated>
  <id>http://ikarishinjieva.github.com/blog/</id>
  <author>
    <name><![CDATA[Tac Huang (ikari_shinji@github)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Chrome Workspace和File Mapping的使用方法]]></title>
    <link href="http://ikarishinjieva.github.com/blog/blog/2013/03/05/chrome-workspace/"/>
    <updated>2013-03-05T22:21:00+08:00</updated>
    <id>http://ikarishinjieva.github.com/blog/blog/2013/03/05/chrome-workspace</id>
    <content type="html"><![CDATA[<p>前几天微博上一直在转Chrome browser引进了workspace的功能，可以在developer tools里直接进行源码编辑。</p>

<p>但是迄今为止搜索到的文档都没有详细描述使用步骤和限制，36kr上的<a href="http://www.36kr.com/p/201304.html">这篇guide</a>也没有关于mapping的描述，更没有一些坑描述。</p>

<p>翻看了Chromium的源代码，将使用步骤和在Windows下的坑描述一下。(截止20130305，这个步骤还是很新的)。</p>

<h2>浏览器版本</h2>

<p>如果是Chrome(谷歌浏览器)，只有开发者分支上有这个功能，地址<a href="https://www.google.com/intl/en/chrome/browser/index.html?extra=devchannel#eula">在此</a></p>

<p>如果是Canary或者Chromium，都有这个功能。</p>

<h2>使用步骤</h2>

<ol>
<li><p>开启"开发者工具实验"(这翻译真心烂...): 在browser输入chrome://flags/，启用"开发者工具实验"
<img src="/images/2013-03-05-chrome-workspace-1.png" title="启用&#34;开发者工具实验&#34;" alt="启用&#34;开发者工具实验&#34;"></p></li>
<li><p>重启chrome</p></li>
<li><p>打开要调试的site，进入Developer tools的setting
<img src="/images/2013-03-05-chrome-workspace-2.png" title="进入Developer tools的setting" ></p></li>
<li><p>启用Workspace功能 (Developer tools -> setting -> Experiments -> File system folders in Sources Panel)
<img src="/images/2013-03-05-chrome-workspace-3.png" title="启用Workspace功能" ></p></li>
<li><p>重启Developer Tools, 可以看到Settings里Workspace页
<img src="/images/2013-03-05-chrome-workspace-4.png" title="Settings里Workspace页" ></p></li>
<li><p>假设源js的目录为c:\test, 需要现在这个目录下创建空文件.allow-devtools-edit, browser才会认可这个为源文件夹
<img src="/images/2013-03-05-chrome-workspace-5.png" title="创建空文件.allow-devtools-edit" ></p></li>
<li><p>在Developer tool -> setting ->Workspace -> File system里，添加源js的目录
<img src="/images/2013-03-05-chrome-workspace-6.png" title="创建空文件.allow-devtools-edit" ></p></li>
<li><p>重启Developer Tools, 可以在Sources页里看到本地folder
<img src="/images/2013-03-05-chrome-workspace-7.png" title="可以在Sources页里看到本地folder" ></p></li>
<li><p>此时在Chrome用Ctrl + O打开文件列表，可以看到两个相同的文件，一个是远端，一个是本地。在本地文件上打断点没有作用
<img src="/images/2013-03-05-chrome-workspace-8.png" title="Ctrl + O打开文件列表，可以看到两个相同的文件" ></p></li>
<li><p>在Developer tool -> setting ->Workspace -> Mappings里，添加mapping：
<code>
http://localhost:7001/.../js/slickgrid C:\test
</code></p></li>
</ol>


<p><em>URL是以http开头的完整路径，url和path都万万不要以/结尾，虽然添加后会自动显示为以/结尾。千万注意大小写会坑爹，要保持mapping和folder的大小写一致</em>
<img src="/images/2013-03-05-chrome-workspace-9.png" title="添加mapping" ></p>

<ol>
<li>此时，用Ctrl + O打开文件列表，只能看到一个文件，在本地文件上可以打断点(此处有坑，请阅读坑部分)，对本地文件的修改也会灵验的(直接反应在C:\test中)。</li>
</ol>


<h2>坑</h2>

<ol>
<li>千万别在mapping的路径后加'/'（保存时会自动加上去），否则可能mapping不上。</li>
<li>大小写会坑爹，千万保持mapping和folder的大小写一致。</li>
<li>如果你的远端文件路径带参数，比如http://xxx/js/1.js?d=1，断点不会触发。已经<a href="https://code.google.com/p/chromium/issues/detail?id=180202">报了个bug</a></li>
</ol>


<p>应该说workspace是挺有用的功能，不过由于坑3，在项目中的运用不畅。本想自己修修，发现这个bug涉及c++代码，表示放弃。</p>
]]></content>
  </entry>
  
</feed>
