---
layout: post
title: "对Mysql bug #70307 的再学习"
date: 2014-04-01 13:07
comments: true
categories:  mysql replication bug source_code
---

之前对bug #70307有过[学习](http://ikarishinjieva.github.io/blog/blog/2013/10/25/study-mysql-bug-70307/), 苦于阿兹海默状态, 又花了半天在mysql 5.5.33上探查这个场景的原因...

简单记录一下

####现象
mysql进行主从复制, 从机上`FLUSH TABLES WITH READ LOCK`后, 进行`STOP SLAVE`, 一定概率下 `SHOW SLAVE STATUS`卡住

####重现步骤
master | slave client 1 | slave client 2
--- | --- | ---
 - | STOP SLAVE IO_THREAD | -
 CREATE TABLE TEST.TEST ... | - | -
 - | FLUSH TABLES WITH READ LOCK | -
 - | START SLAVE IO_THREAD | -
 - | - | STOP SLAVE
 - | SHOW SLAVE STATUS | -

其中, `START/STOP SLAVE IO_THREAD`是为了在`FLUSH TABLES WITH READ LOCK`时造成slave io_thread有未提交数据

####死锁原因

1. `FLUSH TABLES WITH READ LOCK` 会阻塞IO_THREAD提交数据
2. `STOP SLAVE`会等待IO_THREAD结束 (`mi->stop_cond`), 即`STOP SLAVE`间接被`FLUSH TABLES WITH READ LOCK`阻塞
3. `STOP SLAVE`在被阻塞前, 持有了`LOCK_active_mi`, 独占了`master_info`
4. `SHOW SLAVE STATUS`会申请锁`LOCK_active_mi`, 被`STOP SLAVE`阻塞
5. 如果`SHOW SLAVE STATUS`是由之前`FLUSH TABLES WITH READ LOCK`的`slave client 1`发出的, 那逻辑上相当于自己在等待自己释放资源
6. 从另外的client上`UNLOCK TABLES`也解不开
  
